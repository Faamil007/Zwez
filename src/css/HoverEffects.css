.hover-3d {
  --hover-rotate-y: 0;
  --hover-rotate-x: 0;
  --hover-translate-z: 0;
  
  transform: 
    rotateY(var(--hover-rotate-y))
    rotateX(var(--hover-rotate-x))
    translateZ(var(--hover-translate-z));
  transition: transform 0.6s cubic-bezier(0.16, 1, 0.3, 1);
}

.hover-3d:hover {
  --hover-rotate-y: 5deg;
  --hover-rotate-x: 3deg;
  --hover-translate-z: 15px;
}

/* Hover glow effect */
.hover-glow {
  --glow-color: var(--primary-color);
  --glow-size: 0px;
  --glow-opacity: 0;
  
  box-shadow: 
    0 0 var(--glow-size) var(--glow-opacity) var(--glow-color),
    inset 0 0 10px var(--glow-opacity) var(--glow-color);
  transition: 
    box-shadow 0.6s ease,
    transform 0.6s ease;
}

.hover-glow:hover {
  --glow-size: 20px;
  --glow-opacity: 0.4;
  transform: scale(1.02);
}

/* ====== CSS Houdini Effects ====== */
@supports (background: paint(something)) {
  .houdini-card {
    --pattern-seed: 123;
    --pattern-colors: %234361ee, %233f37c9;
    --pattern-spacing: 20;
    --pattern-size: 40;
    
    background-image: paint(dots);
    background-blend-mode: overlay;
    transition: --pattern-seed 0.6s ease;
  }
  
  .houdini-card:hover {
    --pattern-seed: 456;
    --pattern-spacing: 15;
  }
}

/* Fallback */
@supports not (background: paint(something)) {
  .houdini-card {
    background: linear-gradient(
      135deg,
      var(--primary-color),
      var(--accent-color)
    );
  }
}

/* ====== Motion Path Animation ====== */
@media (prefers-reduced-motion: no-preference) {
  .motion-path {
    offset-path: path('M0,0 C0,0 100,-50 200,0 300,50 400,0 500,0');
    offset-distance: 0%;
    animation: moveAlongPath 10s linear infinite;
  }
  
  @keyframes moveAlongPath {
    100% { offset-distance: 100%; }
  }
}

/* ====== Advanced Clip/Mask Effects ====== */
.clip-shape {
  clip-path: polygon(
    0% 15%, 
    15% 15%, 
    15% 0%, 
    85% 0%, 
    85% 15%, 
    100% 15%, 
    100% 85%, 
    85% 85%, 
    85% 100%, 
    15% 100%, 
    15% 85%, 
    0% 85%
  );
  transition: clip-path 0.6s ease;
}

.clip-shape:hover {
  clip-path: polygon(
    0% 0%, 
    50% 15%, 
    100% 0%, 
    100% 85%, 
    50% 100%, 
    0% 85%
  );
}

/* ====== Custom Cursor Effects ====== */
@media (pointer: fine) {
  .cursor-interactive {
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><circle cx="16" cy="16" r="12" fill="none" stroke="%234361ee" stroke-width="2"/></svg>') 16 16, pointer;
  }
  
  .cursor-interactive:hover {
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><path d="M16 2 L30 16 L16 30 L2 16 Z" fill="none" stroke="%234361ee" stroke-width="2"/></svg>') 16 16, pointer;
  }
}

/* ====== Dark/Light Theme Adaptations ====== */
@media (prefers-color-scheme: dark) {
  .glass-card {
    --glass-bg: rgba(30, 30, 40, 0.3);
    --glass-border: 1px solid rgba(255, 255, 255, 0.1);
    --glass-shadow: 0 8px 32px rgba(0, 0, 0, 0.5);
  }
  
  .hover-glow {
    --glow-color: var(--accent-color);
  }
}

/* ====== Reduced Motion ====== */
@media (prefers-reduced-motion: reduce) {
  .glass-card,
  .card-3d,
  [data-scroll],
  .hover-3d,
  .hover-glow {
    transition: none !important;
    animation: none !important;
    transform: none !important;
  }
  
  [data-scroll] {
    opacity: 1 !important;
  }
}

/* ====== Container Query Effects ====== */
@container (max-width: 600px) {
  .glass-card {
    --glass-blur: 10px;
    border-radius: var(--border-radius-lg);
  }
  
  .card-3d:hover {
    --rotate-y: 5deg;
    --rotate-x: 2deg;
    --translate-z: 10px;
  }
}

/* ====== Advanced Text Effects ====== */
.gradient-text {
  background: linear-gradient(
    to right,
    var(--primary-color),
    var(--accent-color),
    var(--highlight-color)
  );
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  transition: background-position 0.6s ease;
  background-size: 200% auto;
}

.gradient-text:hover {
  background-position: right center;
}

/* ====== Shape Outside Effects ====== */
.shape-wrap {
  shape-outside: circle(50% at 50% 50%);
  shape-margin: 1em;
  float: left;
  width: 200px;
  height: 200px;
  clip-path: circle(50% at 50% 50%);
}

/* ====== Performance Optimizations ====== */
.will-change-transform {
  will-change: transform;
}

.will-change-opacity {
  will-change: opacity;
}

.content-visibility-auto {
  content-visibility: auto;
}

/* ====== Logical Properties ====== */
.logical-box {
  padding-block: var(--space-md);
  padding-inline: var(--space-lg);
  margin-block-start: var(--space-xl);
  border-start-end-radius: var(--border-radius);
  border-end-start-radius: var(--border-radius);
}

/* ====== Color Space Effects ====== */
.oklch-bg {
  background: oklch(70% 0.2 260);
  transition: background 0.6s ease;
}

.oklch-bg:hover {
  background: oklch(80% 0.25 280);
}

/* ====== Sticky/Scroll Snap ====== */
.scroll-container {
  scroll-snap-type: y mandatory;
  overflow-y: scroll;
  height: 100vh;
}

.scroll-section {
  scroll-snap-align: start;
  height: 100vh;
}

/* ====== Accordion Effects ====== */
.accordion {
  --accordion-height: 0px;
  --accordion-opacity: 0;
  
  height: var(--accordion-height);
  opacity: var(--accordion-opacity);
  overflow: hidden;
  transition: 
    height 0.6s ease,
    opacity 0.4s ease;
}

.accordion.active {
  --accordion-height: auto;
  --accordion-opacity: 1;
}

/* ====== Grid/Flex Visual Effects ====== */
.animated-grid {
  display: grid;
  gap: var(--space-md);
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
}

.animated-grid > * {
  transition: 
    transform 0.4s ease,
    box-shadow 0.4s ease;
}

.animated-grid:hover > * {
  transform: translateY(-5px);
  box-shadow: 0 10px 20px rgba(0,0,0,0.1);
}

/* ====== Focus Accessibility ====== */
.focus-visible-alt:focus-visible {
  outline: 2px dashed var(--accent-color);
  outline-offset: 4px;
  box-shadow: 0 0 0 6px rgba(67, 97, 238, 0.2);
}

/* ====== Environment Effects ====== */
.environment-box {
  background: 
    linear-gradient(
      to bottom right,
      rgba(255,255,255,0.1) 0%,
      rgba(255,255,255,0) 30%
    ),
    var(--card-bg);
}

/* ====== Pop-up Effects ====== */
.pop-up {
  --pop-scale: 0.9;
  
  transform: scale(var(--pop-scale));
  opacity: 0;
  transition: 
    transform 0.4s cubic-bezier(0.68, -0.55, 0.27, 1.55),
    opacity 0.3s ease;
}

.pop-up.active {
  --pop-scale: 1;
  opacity: 1;
}
/* ====== Ultra-Enhanced Custom Cursor ====== */
@media (pointer: fine) {
  body {
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><circle cx="12" cy="12" r="8" fill="none" stroke="%234361ee" stroke-width="2"/></svg>') 12 12, default;
  }
  
  a, button, [role="button"], [tabindex="0"] {
    --cursor-scale: 1;
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><path d="M16 2 L30 16 L16 30 L2 16 Z" fill="none" stroke="%234361ee" stroke-width="2" transform="scale(%23var(--cursor-scale))"/></svg>') 16 16, pointer;
    transition: --cursor-scale 0.3s cubic-bezier(0.68, -0.55, 0.27, 1.55);
  }

  a:hover, button:hover, [role="button"]:hover, [tabindex="0"]:hover {
    --cursor-scale: 1.2;
  }
}

.shape-mask:hover {
  clip-path: polygon(
    50% 0%, 100% 50%, 50% 100%, 0% 50%
  );
}
