/* ====== Services Grid ====== */
.services-section {
  --glass-blur: 16px;
  --parallax-depth: 60px;
  --hover-elevation: 20px;
  --card-tilt: 8deg;
  --gradient-angle: 135deg;
  --pulse-scale: 1.05;
  --ripple-size: 200%;
  --ripple-duration: 0.8s;
  --stagger-delay: 0.15s;
  
  position: relative;
  overflow: hidden;
  isolation: isolate;
  padding: var(--space-xxl) var(--space-lg);
  background: 
    linear-gradient(
      var(--gradient-angle),
      var(--bg-color) 0%,
      var(--bg-color-secondary) 100%
    );
  view-timeline-name: --services-section;
}

.services-section::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: 
    radial-gradient(
      circle at 70% 30%, 
      rgba(67, 97, 238, 0.15) 0%, 
      transparent 60%
    ),
    radial-gradient(
      circle at 30% 70%, 
      rgba(236, 72, 153, 0.1) 0%, 
      transparent 60%
    );
  background-size: cover;
  z-index: -2;
  animation: 
    gradientRotate 25s linear infinite,
    subtlePulse 15s ease infinite alternate;
  opacity: 0.3;
}

.services-section::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: 
    radial-gradient(1px 1px at 20% 30%, var(--primary-color) 1px, transparent 0),
    radial-gradient(1px 1px at 40% 70%, var(--accent-color) 1px, transparent 0),
    radial-gradient(1px 1px at 60% 20%, var(--highlight-color) 1px, transparent 0),
    radial-gradient(1px 1px at 80% 50%, var(--primary-color) 1px, transparent 0);
  background-size: 150px 150px;
  animation: particleMove 20s linear infinite;
  opacity: 0.05;
  z-index: -1;
  mix-blend-mode: overlay;
}

.section-header {
  text-align: center;
  margin-bottom: var(--space-xl);
  position: relative;
}

.section-title {
  font-size: var(--text-xl);
  margin-bottom: var(--space-sm);
  position: relative;
  display: inline-block;
}

.section-title::after {
  content: '';
  position: absolute;
  bottom: -8px;
  left: 50%;
  transform: translateX(-50%);
  width: 60px;
  height: 4px;
  background: var(--gradient);
  border-radius: 2px;
}

.section-subtitle {
  color: var(--text-color);
  opacity: 0.8;
  font-size: var(--text-md);
  max-width: 700px;
  margin: 0 auto;
}

.services-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(min(300px, 100%), 1fr));
  gap: var(--space-xl);
  max-width: 1400px;
  margin: 0 auto;
  position: relative;
  z-index: 1;
  perspective: 1200px;
}

.service-card {
  --card-scale: 1;
  --card-rotate-y: 0deg;
  --card-rotate-x: 0deg;
  --card-translate-z: 0px;
  --card-opacity: 0;
  
  background: rgba(var(--card-bg-rgb), 0.8);
  border-radius: var(--border-radius-xl);
  box-shadow: 
    0 10px 30px var(--shadow-color),
    0 0 0 1px rgba(255, 255, 255, 0.1);
  transition: all 0.6s cubic-bezier(0.16, 1, 0.3, 1);
  cursor: pointer;
  position: relative;
  overflow: hidden;
  z-index: 1;
  transform-style: preserve-3d;
  transform: 
    scale(var(--card-scale))
    rotateY(var(--card-rotate-y))
    rotateX(var(--card-rotate-x))
    translateZ(var(--card-translate-z));
  opacity: var(--card-opacity);
  backdrop-filter: blur(var(--glass-blur));
  -webkit-backdrop-filter: blur(var(--glass-blur));
  border: 1px solid rgba(255, 255, 255, 0.15);
  animation: 
    fadeInUp 0.8s var(--stagger-delay) forwards,
    float 6s ease-in-out infinite;
  view-timeline-name: --service-card;
  animation-timeline: --service-card;
  animation-range: entry 20% cover 30%;
}

.service-card:nth-child(1) { --stagger-delay: 0.1s; }
.service-card:nth-child(2) { --stagger-delay: 0.3s; }
.service-card:nth-child(3) { --stagger-delay: 0.5s; }
.service-card:nth-child(4) { --stagger-delay: 0.7s; }

.service-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.05) 0%,
      rgba(255, 255, 255, 0.01) 100%
    );
  z-index: -1;
  backdrop-filter: blur(2px);
}

.service-card::after {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background: var(--gradient);
  z-index: -2;
  border-radius: var(--border-radius-xl);
  opacity: 0;
  transition: opacity 0.4s ease;
  animation: 
    borderPulse 3s ease infinite,
    gradientShift 8s ease infinite alternate;
}

.service-card:hover {
  --card-scale: 1.05;
  --card-rotate-y: 5deg;
  --card-rotate-x: 3deg;
  --card-translate-z: 20px;
  
  box-shadow: 
    0 20px 50px var(--shadow-color),
    0 0 0 1px rgba(255, 255, 255, 0.2),
    0 0 40px rgba(67, 97, 238, 0.3);
  z-index: 2;
}

.service-card:hover::after {
  opacity: 0.5;
}

.service-card:active::before {
  content: '';
  position: absolute;
  top: var(--mouse-y);
  left: var(--mouse-x);
  width: 0;
  height: 0;
  background: radial-gradient(
    circle closest-side,
    rgba(255, 255, 255, 0.3),
    transparent
  );
  transform: translate(-50%, -50%);
  animation: ripple var(--ripple-duration) ease-out;
}

.card-content {
  padding: var(--space-xl);
  position: relative;
  z-index: 2;
  transform-style: preserve-3d;
}

.card-title {
  font-size: var(--text-lg);
  margin-bottom: var(--space-md);
  color: transparent;
  background: linear-gradient(
    to right,
    var(--primary-color),
    var(--accent-color)
  );
  -webkit-background-clip: text;
  background-clip: text;
  position: relative;
  display: inline-block;
  transform: translateZ(30px);
}

.card-title::after {
  content: '';
  position: absolute;
  bottom: -8px;
  left: 0;
  width: 0;
  height: 3px;
  background: var(--gradient);
  transition: width 0.6s ease;
}

.service-card:hover .card-title::after {
  width: 100%;
}

.service-list {
  list-style: none;
  margin-bottom: var(--space-xl);
  counter-reset: service-item;
}

.service-item {
  display: flex;
  align-items: center;
  gap: var(--space-sm);
  margin-bottom: var(--space-md);
  position: relative;
  padding-left: var(--space-xl);
  transform: translateZ(20px);
  opacity: 0;
  animation: fadeInUp 0.6s ease forwards;
}

.service-item:nth-child(1) { animation-delay: 0.3s; }
.service-item:nth-child(2) { animation-delay: 0.5s; }
.service-item:nth-child(3) { animation-delay: 0.7s; }
.service-item:nth-child(4) { animation-delay: 0.9s; }

.service-item::before {
  content: counter(service-item);
  counter-increment: service-item;
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
  width: 24px;
  height: 24px;
  background: var(--gradient);
  color: white;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.8em;
  font-weight: bold;
  box-shadow: 0 4px 8px rgba(67, 97, 238, 0.3);
}

.check-icon {
  color: var(--accent-color);
  font-size: var(--text-md);
  margin-left: auto;
  opacity: 0;
  transform: scale(0);
  transition: all 0.4s cubic-bezier(0.68, -0.55, 0.27, 1.55);
}

.service-item:hover .check-icon {
  opacity: 1;
  transform: scale(1) rotate(15deg);
}

.card-button {
  --btn-glow: 0 0 20px rgba(67, 97, 238, 0.3);
  
  background: none;
  border: none;
  color: var(--primary-color);
  font-family: var(--font-heading);
  font-weight: 600;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: var(--space-sm);
  transition: all 0.4s ease;
  padding: var(--space-sm) 0;
  position: relative;
  overflow: hidden;
  transform: translateZ(20px);
}

.card-button::before {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 0;
  height: 2px;
  background: var(--gradient);
  transition: width 0.4s ease;
}

.card-button:hover {
  color: var(--accent-color);
  transform: translateX(10px) translateZ(20px);
}

.card-button:hover::before {
  width: 100%;
}

.card-decoration {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 4px;
  background: var(--gradient);
  transition: all 0.4s ease;
  transform-origin: left;
  transform: scaleX(0);
}

.service-card:hover .card-decoration {
  height: 8px;
  transform: scaleX(1);
}

/* Animations */
@keyframes gradientRotate {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

@keyframes subtlePulse {
  0%, 100% { opacity: 0.3; }
  50% { opacity: 0.5; }
}

@keyframes particleMove {
  100% { background-position: 150px 150px; }
}

@keyframes borderPulse {
  0%, 100% { opacity: 0.3; }
  50% { opacity: 0.7; }
}

@keyframes gradientShift {
  0% { background-position: 0% 50%; }
  100% { background-position: 100% 50%; }
}

@keyframes ripple {
  to {
    width: 200%;
    height: 200%;
    opacity: 0;
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes float {
  0%, 100% { transform: translateY(0) translateZ(0); }
  50% { transform: translateY(-15px) translateZ(10px); }
}

/* Dark mode adjustments */
@media (prefers-color-scheme: dark) {
  .services-section::before {
    opacity: 0.2;
  }
  
  .service-card {
    background: rgba(30, 30, 40, 0.8);
    border: 1px solid rgba(255, 255, 255, 0.05);
  }
  
  .service-card:hover {
    box-shadow: 
      0 20px 50px rgba(0, 0, 0, 0.5),
      0 0 0 1px rgba(255, 255, 255, 0.1),
      0 0 40px rgba(67, 97, 238, 0.2);
  }
  
  .service-card::after {
    opacity: 0.1;
  }
}

/* Reduced motion preference */
@media (prefers-reduced-motion: reduce) {
  .services-section::before,
  .services-section::after,
  .service-card,
  .service-item {
    animation: none !important;
    transition: none !important;
  }
  
  .service-card {
    opacity: 1;
    transform: none;
  }
  
  .service-item {
    opacity: 1;
  }
}

/* Container queries */
@container (max-width: 800px) {
  .services-grid {
    grid-template-columns: 1fr 1fr;
    gap: var(--space-lg);
  }
}

@container (max-width: 500px) {
  .services-grid {
    grid-template-columns: 1fr;
  }
  
  .service-card {
    backdrop-filter: blur(8px);
  }
}

/* Custom cursor for interactive elements */
@media (pointer: fine) {
  .service-card {
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><circle cx="16" cy="16" r="10" fill="none" stroke="%234361ee" stroke-width="2"/></svg>') 16 16, pointer;
  }
  
  .card-button {
    cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32"><path d="M16 2 L30 16 L16 30 L2 16 Z" fill="none" stroke="%234361ee" stroke-width="2"/></svg>') 16 16, pointer;
  }
}

/* Shape outside effect */
@media (min-width: 1024px) {
  .services-section::after {
    shape-outside: polygon(0 0, 100% 0, 100% 80%, 0 100%);
    shape-margin: 2em;
  }
}