/* GlassCard.css - Ultra Enhanced */
:root {
  --primary-color: #4361ee;
  --secondary-color: #3a0ca3;
  --accent-color: #4cc9f0;
  --text-color: #f8f9fa;
  --border-radius-xl: 24px;
  --glass-transition: all 0.6s cubic-bezier(0.16, 1, 0.3, 1);
}

.glass-card {
  /* Base Glass Properties */
  --glass-blur: 16px;
  --glass-border: 1px solid rgba(255, 255, 255, 0.2);
  --glass-shadow: 0 8px 32px rgba(31, 38, 135, 0.37);
  --glass-bg: rgba(255, 255, 255, 0.1);
  --glass-reflect: linear-gradient(
    135deg,
    rgba(255,255,255,0.05) 0%,
    rgba(255,255,255,0.01) 50%,
    rgba(255,255,255,0.05) 100%
  );
  --glass-perspective: 1000px;
  
  /* Dynamic Properties */
  --mouse-x: 0;
  --mouse-y: 0;
  --rotate-y: 0;
  --rotate-x: 0;
  --translate-z: 0;
  
  /* Composite Background */
  background: 
    radial-gradient(
      circle at var(--mouse-x) var(--mouse-y),
      rgba(255,255,255,0.15) 0%,
      transparent 70%
    ),
    var(--glass-reflect),
    var(--glass-bg);
  
  /* Glass Effects */
  backdrop-filter: 
    blur(var(--glass-blur))
    saturate(180%);
  -webkit-backdrop-filter: 
    blur(var(--glass-blur))
    saturate(180%);
  
  /* 3D Transform */
  transform-style: preserve-3d;
  transform: 
    perspective(var(--glass-perspective))
    rotateY(var(--rotate-y))
    rotateX(var(--rotate-x))
    translateZ(var(--translate-z));
  
  /* Visual Styling */
  border-radius: var(--border-radius-xl);
  border: var(--glass-border);
  box-shadow: var(--glass-shadow);
  transition: var(--glass-transition);
  position: relative;
  overflow: hidden;
  z-index: 1;
}

/* Glass edge highlight with gradient */
.glass-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255,255,255,0.3),
    transparent
  );
  z-index: 2;
}

/* Dynamic reflection effect with parallax */
.glass-card::after {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: var(--glass-reflect);
  transform: rotate(30deg) translate3d(0, 0, -10px);
  opacity: 0;
  transition: opacity 0.6s ease;
  pointer-events: none;
}

/* Hover States */
.glass-card:hover {
  --glass-blur: 20px;
  --glass-border: 1px solid rgba(255, 255, 255, 0.3);
  --glass-shadow: 
    0 12px 40px rgba(31, 38, 135, 0.5),
    0 0 0 1px rgba(255,255,255,0.1),
    0 0 60px rgba(67, 97, 238, 0.3);
  --translate-z: 10px;
}

.glass-card:hover::after {
  opacity: 0.3;
  animation: glassReflect 6s linear infinite;
}

/* Mouse Tracking Effect */
.glass-card-track {
  position: relative;
}

.glass-card-track:hover .glass-card {
  --rotate-y: calc((var(--mouse-x) - 50%) * 0.5deg);
  --rotate-x: calc((50% - var(--mouse-y)) * 0.5deg);
}

/* Inner Content Container */
.glass-card-content {
  position: relative;
  z-index: 3;
  transform: translateZ(20px);
  transition: transform 0.4s ease;
}

.glass-card:hover .glass-card-content {
  transform: translateZ(30px);
}

/* Floating Particles Effect */
.glass-card-particles {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: -1;
}

.glass-particle {
  position: absolute;
  background: rgba(255,255,255,0.6);
  border-radius: 50%;
  animation: floatParticle 15s infinite linear;
  opacity: 0;
}

@keyframes floatParticle {
  0% { transform: translateY(0) translateX(0) scale(0.5); opacity: 0; }
  20% { opacity: 0.3; }
  100% { transform: translateY(-100px) translateX(100px) scale(1.2); opacity: 0; }
}

/* Reflection Animation */
@keyframes glassReflect {
  0% { transform: translateY(-100%) rotate(30deg) translateZ(-10px); }
  100% { transform: translateY(100%) rotate(30deg) translateZ(-10px); }
}

/* 3D Depth Indicator */
.glass-card-depth {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 4px;
  background: linear-gradient(90deg, var(--primary-color), var(--accent-color));
  transform: scaleY(0) translateZ(-10px);
  transform-origin: bottom;
  transition: transform 0.6s cubic-bezier(0.16, 1, 0.3, 1);
  z-index: 2;
}

.glass-card:hover .glass-card-depth {
  transform: scaleY(1) translateZ(-10px);
}

/* Responsive Adjustments */
@media (max-width: 768px) {
  .glass-card {
    --glass-blur: 12px;
    --glass-perspective: 500px;
  }
  
  .glass-card:hover {
    --translate-z: 5px;
  }
}

/* Reduced Motion Preference */
@media (prefers-reduced-motion: reduce) {
  .glass-card,
  .glass-card::after,
  .glass-particle,
  .glass-card-depth {
    animation: none !important;
    transition: none !important;
  }
  
  .glass-card {
    --rotate-y: 0 !important;
    --rotate-x: 0 !important;
    --translate-z: 0 !important;
  }
}

/* Houdini Paint Worklet Fallback */
@supports (background: paint(something)) {
  .glass-card {
    --pattern-seed: 1234;
    --pattern-colors: %23ffffff, %23aaaaaa;
    background-image: paint(glassNoise);
    background-blend-mode: overlay;
  }
}

/* Custom Scroll Effect */
.glass-card-scroll {
  animation-timeline: view();
  animation-range: entry 20% cover 30%;
}

/* Chromatic Aberration Effect */
.glass-card-chroma {
  position: relative;
  overflow: hidden;
}

.glass-card-chroma::before,
.glass-card-chroma::after {
  content: attr(data-content);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

.glass-card-chroma::before {
  color: rgba(255, 0, 0, 0.3);
  transform: translate(2px, -1px);
}

.glass-card-chroma::after {
  color: rgba(0, 0, 255, 0.3);
  transform: translate(-2px, 1px);
}

/* Dynamic Gradient Border */
.glass-card-border {
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  background: linear-gradient(
    45deg,
    var(--primary-color),
    var(--accent-color),
    var(--secondary-color)
  );
  border-radius: var(--border-radius-xl);
  z-index: -1;
  opacity: 0;
  transition: opacity 0.6s ease;
}

.glass-card:hover .glass-card-border {
  opacity: 0.3;
}

    /* Glassmorphism adjustments */
    .glass-card {
      --glass-blur: 12px;
      backdrop-filter: blur(var(--glass-blur));
      -webkit-backdrop-filter: blur(var(--glass-blur));
    }
